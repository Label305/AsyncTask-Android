apply plugin: 'android-library'

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.9.+'
    }
}

repositories {
    mavenCentral()
    maven { url 'http://download.crashlytics.com/maven' }
}

dependencies {
    compile 'com.android.support:support-v4:19.1.+'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.j256.ormlite:ormlite-core:4.48'
    compile 'com.crashlytics.android:crashlytics:1.+'
    compile 'com.caverock:androidsvg:1.2.1'

    compile files('libs/volley.jar')
    compile files('libs/libGoogleAnalyticsServices.jar')

    /* Test dependencies */
    androidTestCompile('org.mockito:mockito-core:1.9.5') { exclude group: 'org.hamcrest' }
//    androidTestCompile('com.google.dexmaker:dexmaker-mockito:1.1') { exclude group: 'org.hamcrest' }
    androidTestCompile('junit:junit:4.11') { exclude group: 'org.hamcrest' }
    androidTestCompile 'org.hamcrest:hamcrest-all:1.3'

    /* Custom compiled dexmaker. Switch back to the original one once fix https://code.google.com/p/dexmaker/issues/detail?id=28 has been applied */
    androidTestCompile files('libs/dexmaker-1.1.jar')
    androidTestCompile files('libs/dexmaker-mockito-1.1-custom.jar')
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.0.3'

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    lintOptions {
        lintConfig file("../lint.xml")
    }

}

android.libraryVariants.all { variant ->

    task("generate${variant.name}Javadoc", type: Javadoc) {
        if(project.hasProperty('TITLE') && project.hasProperty('OUTPUT') && project.hasProperty('ANDROID_HOME')) {
            title = TITLE
            description "Generates Javadoc for $variant.name."
            source = variant.javaCompile.source
            ext.androidJar =
                    "${android.plugin.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
            destinationDir file(OUTPUT)
            println(destinationDir)
            classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
            options.links("http://docs.oracle.com/javase/7/docs/api/");
            options.linksOffline("http://d.android.com/reference", ANDROID_HOME + "/docs/reference")
            options.setMemberLevel(JavadocMemberLevel.PACKAGE)
            exclude '**/BuildConfig.java'
            exclude '**/R.java'
        }

    }
}

